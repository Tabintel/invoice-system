// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Tabintel/invoice-system/ent/invoice"
	"github.com/Tabintel/invoice-system/ent/schema"
	"github.com/Tabintel/invoice-system/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	invoiceFields := schema.Invoice{}.Fields()
	_ = invoiceFields
	// invoiceDescStatus is the schema descriptor for status field.
	invoiceDescStatus := invoiceFields[2].Descriptor()
	// invoice.DefaultStatus holds the default value on creation for the status field.
	invoice.DefaultStatus = invoiceDescStatus.Default.(string)
	// invoiceDescCurrency is the schema descriptor for currency field.
	invoiceDescCurrency := invoiceFields[5].Descriptor()
	// invoice.DefaultCurrency holds the default value on creation for the currency field.
	invoice.DefaultCurrency = invoiceDescCurrency.Default.(string)
	// invoiceDescCreatedAt is the schema descriptor for created_at field.
	invoiceDescCreatedAt := invoiceFields[6].Descriptor()
	// invoice.DefaultCreatedAt holds the default value on creation for the created_at field.
	invoice.DefaultCreatedAt = invoiceDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescRole is the schema descriptor for role field.
	userDescRole := userFields[4].Descriptor()
	// user.DefaultRole holds the default value on creation for the role field.
	user.DefaultRole = userDescRole.Default.(string)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
}
